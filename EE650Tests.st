TestCase subclass: #EE650DomainTests	instanceVariableNames: ''	classVariableNames: 'LoginPageComponent MFA'	package: 'EE650Tests'!!EE650DomainTests methodsFor: 'running' stamp: '4/21/2025 14:53'!setUp    "Initialize any objects to be reused in multiple test cases"    super setUp.    "e.g. self user := User new."! !!EE650DomainTests methodsFor: 'running' stamp: '4/21/2025 14:54'!testUserCreation    | user |    user := User new.    self assert: user isNotNil.! !!EE650DomainTests methodsFor: 'running' stamp: '4/21/2025 15:07'!testLoginAttemptInstance    | login |    login := LoginAttempt new.    self assert: (login isKindOf: LoginAttempt).! !!EE650DomainTests methodsFor: 'running' stamp: '4/21/2025 14:54'!testAuthSessionInitialization    | session |    session := AuthSession new.    self assert: session isNotNil.! !!EE650DomainTests methodsFor: 'running' stamp: '4/21/2025 14:54'!testUserHasLoginAttempts    | user attempt |    user := User new.    attempt := LoginAttempt new.    user addLoginAttempt: attempt.  "Ensure this method exists in User class"    self assert: (user loginAttempts includes: attempt).! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 15:11'!testUserClassInitialization    | user |    user := User new.    user username: 'user'; password: 'secure123'.    self assert: user username equals: 'user'.    self assert: user password equals: 'secure123'.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 15:11'!testLoginAttemptAssociation    | attempt |    attempt := LoginAttempt new.    attempt username: 'user'; status: 'Success'.    self assert: attempt username equals: 'user'.    self assert: attempt status equals: 'Success'.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 16:21'!testMFACreation    | mfa |    mfa := (Smalltalk at: #MFA) new.    mfa otpCode: '123456'; expirySeconds: 60.    self assert: mfa otpCode equals: '123456'.    self assert: mfa expirySeconds equals: 60.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 15:12'!testAuthSessionExpiry    | session |    session := AuthSession new.    session token: 'abc123'; expiresIn: 120.    self assert: session token equals: 'abc123'.    self assert: session expiresIn equals: 120.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 16:49'!testUserDisplaysUsername	| user |	user := User new.	user username: 'user'.	self assert: user username equals: 'user'.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 16:49'!testSessionDisplaysExpiry	| session |	session := AuthSession new.	session expiresIn: 3600.	self assert: session expiresIn equals: 3600.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 16:50'!testMFADisplaysOTP	| mfa |	mfa := Smalltalk at: #MFA ifAbsent: [ self fail: 'MFA class not found' ].	mfa := mfa new.	mfa otpCode: '654321'.		self assert: mfa otpCode equals: '654321'.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 16:54'!testSessionExpiresAfterTimeout	| session |	session := AuthSession new.	session expiresIn: 3600.	self assert: session expiresIn = 3600.! !!EE650DomainTests methodsFor: 'tests' stamp: '4/21/2025 16:55'!testLogoutTerminatesSession	| session |	session := AuthSession new.	session token: 'sample-token'.	session logout.	self assert: session token isNil.! !